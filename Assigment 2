1) What is `NPM`?
ans) NPM is world largest software registry . NPM use to share and borror pakages .it contains react pakages , react-dom pakages and also help to execute the code 

2)what is the diffrence between module and pakages ? defined the module , pakages , library , framework ?
ans) a pakages is collection of module , which library is collection of pakages 
     module : it is smallest unit of organization a module is piece of code that can build upon . module are made up of function , clases , variable and other blocks of code 
     pakages : a collection of module that usually have similar functional purpose . pakages can be organized hieraracically 
     library : it is collection of pakages that provide ready to use functionalities .library down force style on user 
     framework : set of libraries that provide an architecture for application devlpment framework provide set of rule , convention and tools to help structure force a coding style on user 

3)What is `Parcel/Webpack`? Why do we need it?
ans) parcel and webpack are module bundler . it is tool used to bundler and optimeze your application code , espically in mordern OS libraries like react 
    bundler : it is a tool that allow devlper to pakages their code into a single file or bumdler . it make it easier to deploy and run the application and making the code efficiently and maintaliblity 

4)What is `.parcel-cache`
ans) parcel cache store information about your project when parcel build it , so that it rebuild ,it doest reparse and re - analyze everthings from scrach 

5)What is `npx` ?
ans) run a command from local or remote npx pakages 
             or
     NPX is command line interface tools that allow run NODE.JS pakages from NPM registry without installying them gllobally .. download and run pakages locally 

6)What is difference between `dependencies` vs `devDependencies`
ans) dependencies : these are pakages your application needs to run in production .. purpose : core library and framework that your application needs to run in production 
     devdependencies : these are pakages used during devlpment but not required in production .. purpose : tools thathelp you to build test and maintained application

7)What is Tree Shaking?
ans) it is term used in modern JS devlopment to refer to process of elimination unused code from your final bundler ... 
                            or
     tree shaking remove dead code by analyzing the dependency tree of application ... we used blunder to do it 

8) What is Hot Module Replacement?
ans) hot module replacement is a feature in modern JS devlopment allow you to update module in running application without requiring full reload 
     how to work HMA :
     1) detech changes : when you modify file your project , the module bundler detech the changes 
     2) rebuilding the changes : the bundler recompiler only changes moulde instead of entire application 
     3) injection : the updated module used to borrower vie websocket connection similar mechanism 

9) - List down your favourite 5 superpowers of Parcel and describe any 3 of them in your own words ?
ans) magnificatin ->> the process to reduce the size of code by remove unnessary character withpit altering function ..  purpose : reduce file size faster in production enviroment 
      how it works : bundler used pakages to do this for HTML: parcel build logic , JS : tersen , CSS : CSSnamno 
    optimize image ->> the heavies things to reload in a webpage is image . parcel bundler optimze these things using sharp or imaganin pakages 
    caching while devlopment ->> parcel cache all code while devlopment (cache stored the information aboout project when parcel build it , so it rebuild it ,it doest take much time analyzed all these things again and again)
    zero configuration ->> think of zero configuration like using a device that work the moment you plug it , without neediing you to adject setting or read a manual 
      parcel is designed to work out of box . no need to write a coonfiguration like .webpack.config.js ... parcel automatically figure out how to handle your files (.html.css.JS etc) and does all the necessary work behind the screan
      how it work : automatically handle common file type (.html elc) , it automatically applies high tool (like babel , terser ,CSSnano) to process and optimze your file 
     consistent hashing algorithum ->>parcel uses content hashing algorithum to generate unique deterministric file name for bundler assest .it  ensure efficiently caching assest and  integrity of file during the build process ..
     parcel typically used MD5 algorithum to generate file hash . MD5 is widly used for its balance of speed and reliablity in generatingunique identification for file content 
      HOW IT WORKS : 1) duringthe build ,parally read the content of each file (eg JS,CSS,HTML etc) 
                    2) it applies MD5 algorithum to generate hash based on content 
                    3) this hash as appended to filename eg app.[hash].js etc
10)What is `.gitignore`? What should we add and not add into it?
ans) the purpose of .gitignore file is to ensure that certain file not tracked by git remain untracked 
                           or 
     to stop trackingfile that is currently tracked .the file name can then be added to the .gitinore file to stop the file being reintroduce in later commit 
     * anythiing which is auto generate we put into .gitigore like node module , testing file etc 
11)What is the difference between `package.json` and `package-lock.json`?
ans) pakages.json file contains the list of dependencies and script in a project while pakages.lock.json specific their respective versin to ensure consistent installion in diffrent enviromental 
    script : we used script component to define custom command or automate task as part of our devlopment and production workflow 

12)Why should I not modify `package-lock.json`?
ans) pakage-lock.json file is a auto generated file managed by NPM .editing it directly can lead by inconsistency ,broken dependencies or unexpected behaviour in your project 
                                            or
     to endure consistency and responsiblity across diffrent enviroments , both file should be commited to version control and devloper should be careful not to modify pakages-lock.json file directly 

13)What is `node_modules` ? Is it a good idea to push that on git?
ans)it is a folder where npm or yarn install all dependencies required for a node.js project it contain all installed pakages , nested dependencies , executable binaries 
      NO, we should not put node_module to GIT because 1) it have large size 2) ll dependencies already there in pakages.json 
      why we need node-module:
      1) tool like pascal and webpack use to access libraries during devlopment 
      2) it provide local copy of all librarues your project depend on it 

14)- What is the `dist` folder?
ans ) it is a file that contain production level file . we can deploy this file directly we used "parcel watch index.html" to build the sist folder .. watch is used because after made dist folder and we modify the changes the automatically cange dist folder 

15)What is `browserlists`Read about dif bundlers: vite, webpack, parcel?
ans) browserlist is tools that specify which browser support i your frontend application . it i spresent in pakage.json 
      why do we need browserlist : 1) optimize the target browers 2) smallest build 3) autoomation (it means generation appropiate code or syntak)
      diffrence between :VITE , WEBPACK ,PARCEL 
     WEBPACK : if you need full excess and control and customization 
     PARCEL : if yo want somethings simple for your small to medium project 
     VITE : if you building modern libraries(react) and need blazing fast performance 

16) Read about: ^ - caret and ~ - tilda
ans) we used ^(caret) because whenever in future there are some other version present the automatically install the new version 
     we used ~ (tilde) because whenever i future there are some other version present the tilde doest install we used old version 

17)Read about Script types in html (MDN Docs)?
ans) element used to embed(to fix something deeply) executable code or data 
     this is typically used to embed or refer to js code 

18) what is transative dependencies ?
ans) A transitive dependency is one not imported directly into the project at hand, but instead imported by a direct dependency or another transitive dependency.
                              or 
    it means every pakages depend another-another dependencies these called transative dependencies  



                          COADING 
indec.html -->>
(<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>nameshta react</title>
</head>
<body>
  <div id="root">not reander </div>
  
</body>
<script type = module , src="main.js"></script>
</html>)

main.js(import React from "react";
import ReactDOM from "react-dom/client"; 

const heading1 = React.createElement(
  "h1",
  { id: "heading1" },
  "heading1"
);

const heading2 = React.createElement(
  "h2",
  { id: "heading2" },
  "heading2"
);

const container = React.createElement(
  "div",
  { id: "container" },
  [heading1, heading2]
);

const root = ReactDOM.createRoot(document.getElementById("root")); 
root.render(container); 
)

          
