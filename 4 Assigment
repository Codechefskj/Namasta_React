1) Is JSX mandatory for React?
ans) no JSX is not mandotary for react .. JSX is just like syntak which make .createElemnt easy way to written 

2)Is ES6 mandatory for React?
ans) No ES6 is not mandatory for react . react itself does't depend on ES6 it can used with ES6 or older 

3) what is ES6 ?
ans) ES6 was major update to JS , introducing feature like let,const,arrow function , classes , templete literals , promises and more 

4)How can I write comments in JSX?
ans) we used "//" for single line comments and "**/" for multiple line 

5)What is Virtual DOM?
ans) VDOM is lightweight copy or representation of real DOM that exist is memory rather than browser (this is a just copy of real DOM)
     in typical react application the virtual DOM act an intermediate between the UI state and real DOM . when somethings change in real DOM , react will update the virtual DOM first 

6) what is shadow DOM ? how it is diffrent for virtual dom ?
ans) The shadow dom is browser technology designed primarily for scoping variable and css in web components . virtual DOM is concepy implementation by libraries in JS 

7)What is Reconciliation in React?
ans) it is process of updating the real DOM based in changes in virtual DOM . react uses highly optimizes algorithum (DIFFER) to compare the current virtual DOM with previous one the figure 
     out the minimum set of changes ("differ") required update the real DOM . this process ensure that react only update the nessasary part of uI , improving performance and  avoidable unnessary re-render 

8)What is React Fiber?
ans) a reimplementation of React's core algorithm that improves the performance of React applications
     the goal of react fibre is to increase its siutablity for area like animation , layout  and gesture 
     features are :
     1) incremental rendering : the ablity to split rendering work chunks(large peices) and spread out over multiple frames 
     2) the ablity to pause , abort or reuse work as new update come in the ability to assign pririty to diffrent types of update 

9)Why we need keys in React? When do we need keys in React?
ans)key help react to identify which iteam have changes are added or are remove ... suppose we have 4 div and then we add one more div in virual dom . the added div lies on first place then other dom are present after that . if we dont have key the diffre algorithum rendering everthing then commit change into real DOM that's why we give unique key over there
    no key << index key << uniquly key 

10) Can we use index as keys in React?
ans) yes we can used the index of array or map in react , but it not recommendated to used this because :
     1) incorrect components matching : react used key yo identify which element has to chnged been added or rendering if the order of iteam change using and index can cause react to mis match element , leading to unexpected error 

11) What is props in React? Ways to?
ans) props(properties) are ways to pass data from parents components to a child components in react 
                           or
    props (properties) are attribute or value from that we pass to function components in react to make them reusable and dynamic 
     ways to : 1) we simple pass attribute in functional components and in functinal components we writs simply props and used that data 
               2) we pass attribute in functional components and wrute props in components the we write const resturants[name,star,imageid]= props , then we used the data 
               3) we write in functional components (name,star,imageid ,etc) and write attribute like name={restrurant.name} , star={restrurant.star} etc
               4) we pass the attribute spreading array {...resturant} . here restrurant is JS object array , and we write parameter same as no 3 
               5) we used restrurant.map in attribute type and parameter are same write above 


12) What is a Config Driven UI ?
ans) when you bild a real life application you want to run you application in all over the world we control the frontend is know as config driven UI 
                                or 
    a config driven UI design approch where the user interface (UI) dynamically generated based on configuration file or object of being hardcoded in applicatin 
                                 or 
    example : swiggi give offer in resturunt . suppose i am open my swiggi with 20% casback offor in particular resturant the again i opend my swiggi in tamil nadu the same offer doest gave by swiggi this is example is config driven ui 

13) what is return statment and why we used it and what is type of reurn statment ?
ans) return statment help to optimze the rendering process by efficiently updation only changed element of re renderiing the entire list 
     yes, reurrn statment is mandatory in react functinal component if you are returning multiple line :
     types of return statment :
     1) single line jsx : if you is single expresion you can't used culies braces you used implicit return with paranthesis ();
     2) multiple line JSX : when you use spans multiple line .)use paranthesis () to wrap the jsx readublity .) explicit use return keyword if you open function body with curly braces {};

14) how to join into array ?
ans) .join() method of array create a new  string by concature all the element in this array seprated by commas or specific seprator string 

15)what is optiniion chaining in js ?
ans) aperation chaining an object property or call functioon if the object accesed or function called using this operation is undefined or null the expresion short circuit and evalutes to undefined instead throwing error 

16) what is spread operation in JS ?
ans) the JS apread operator (...) expend an iterable (like array) into element . 
     this allow us quickly all part of existing array into another array 

17) what is array.map() in JS ?
ans) array.map(write a function) or array.map(()=>{return})
                             or
     it means crete a new array from callaing for every array function 

18)Build a Food Ordering App
.)Think of a cool name for your app
.)Build a AppLayout
.)Build a Header Component with Logo & Nav Items & Cart
.)Build a Body Component
.)Build RestaurantList Component
.)Build RestaurantCard Component
.)Use static data initially
.)Make your card dynamic(pass in props)
.)Props - passing arguments to a function - Use Destructuring & Spread operator
.)Render your cards with dynamic data of restaurants
.)Use Array.map to render all the restaurants
ans) import React from "react";
import ReactDOM from "react-dom/client";

let Title = (
  <a href="/">
    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_q24HuBo0nHIoo7sLZP4utCVu8X-qVVAJHg&s"
      alt="LOGO"
      className="logo" />
  </a>
);

const Header = () => {
  return (
    <div className="mainheader">
      {Title}
      < div className="navbaar">
        <ul>
          <li>home</li>
          <li>about</li>
          <li>contact</li>
          <li>cart</li>
        </ul>
      </div >
    </div>
  );
};

const Resturantinfo = [
  {
    id: "658210",
    name: "The Fusion Lounge",
    cloudinaryImageId: "fa4944f0cfdcbca2bec1f3ab8e3db3f7",
    locality: "Triloki Nagar",
    areaName: "Railway Station",
    costForTwo: "₹300 for two",
    cuisines: [
      "North Indian",
      "South Indian",
      "Chinese",
      "Beverages",
      "Fast Food",
      "Desserts"
    ],
    avgRating: 4,
    parentId: "395453",
    avgRatingString: "4.0",
    totalRatingsString: "280",
    sla: {
      deliveryTime: 67,
      lastMileTravel: 10.2,
      serviceability: "SERVICEABLE",
      slaString: "65-70 mins",
      lastMileTravelString: "10.2 km",
      iconType: "ICON_TYPE_EMPTY"
    },
    availability: {
      nextCloseTime: "2024-12-12 23:00:00",
      opened: true
    },
    badges: {},
    isOpen: true,
    type: "F",
    badgesV2: {
      entityBadges: {
        imageBased: {},
        textBased: {},
        textExtendedBadges: {}
      }
    },
    analytics: {
      context: "seo-data-ce386178-91fc-4e58-ab47-b496cbb903b2"
    },
    cta: {
      link: "https://www.swiggy.com/city/chhindwara/the-fusion-lounge-triloki-nagar-railway-station-rest658210/",
      type: "WEBLINK"
    }
  },
  {
    id: "150597",
    name: "Scoops Fast Food And Ice Cream",
    cloudinaryImageId: "fm3rs3g6z7ibfhesmxnu",
    locality: "Irrigation Colony",
    areaName: "Khajri Road",
    costForTwo: "₹200 for two",
    cuisines: [
      "Bakery",
      "Ice Cream",
      "Snacks",
      "Beverages"
    ],
    avgRating: 4,
    veg: true,
    parentId: "179482",
    avgRatingString: "4.0",
    totalRatingsString: "390",
    sla: {
      deliveryTime: 76,
      lastMileTravel: 12.9,
      serviceability: "SERVICEABLE",
      slaString: "75-80 mins",
      lastMileTravelString: "12.9 km",
      iconType: "ICON_TYPE_EMPTY"
    },
    availability: {
      nextCloseTime: "2024-12-12 22:30:00",
      opened: true
    },
    badges: {
      imageBadges: [
        {
          imageId: "v1695133679/badges/Pure_Veg111.png",
          description: "pureveg"
        }
      ]
    },
    isOpen: true,
    type: "F",
    badgesV2: {
      entityBadges: {
        imageBased: {
          badgeObject: [
            {
              attributes: {
                description: "pureveg",
                imageId: "v1695133679/badges/Pure_Veg111.png"
              }
            }
          ]
        },
        textBased: {},
        textExtendedBadges: {}
      }
    },
    analytics: {
      context: "seo-data-ce386178-91fc-4e58-ab47-b496cbb903b2"
    },
    cta: {
      link: "https://www.swiggy.com/city/chhindwara/scoops-fast-food-and-ice-cream-irrigation-colony-khajri-road-rest150597",
      type: "WEBLINK"
    }
  },
  {
    id: "150591",
    name: "Satkar Restaurant",
    cloudinaryImageId: "rvxp5xbniat84r6efku2",
    locality: "Sinchai Colony",
    areaName: "Satkar Chowk",
    costForTwo: "₹250 for two",
    cuisines: [
      "North Indian",
      "South Indian",
      "Indian",
      "Salads",
      "Desserts"
    ],
    avgRating: 4.3,
    veg: true,
    parentId: "21553",
    avgRatingString: "4.3",
    totalRatingsString: "2.3K+",
    sla: {
      deliveryTime: 55,
      lastMileTravel: 11.1,
      serviceability: "SERVICEABLE",
      slaString: "50-55 mins",
      lastMileTravelString: "11.1 km",
      iconType: "ICON_TYPE_EMPTY"
    },
    availability: {
      nextCloseTime: "2024-12-12 22:45:00",
      opened: true
    },
    badges: {
      imageBadges: [
        {
          imageId: "v1695133679/badges/Pure_Veg111.png",
          description: "pureveg"
        }
      ]
    },
    isOpen: true,
    type: "F",
    badgesV2: {
      entityBadges: {
        imageBased: {
          badgeObject: [
            {
              attributes: {
                description: "pureveg",
                imageId: "v1695133679/badges/Pure_Veg111.png"
              }
            }
          ]
        },
        textBased: {},
        textExtendedBadges: {}
      }
    },
    aggregatedDiscountInfoV3: {
      header: "₹100 OFF",
      subHeader: "ABOVE ₹349",
      discountTag: "FLAT DEAL"
    },
    analytics: {
      context: "seo-data-ce386178-91fc-4e58-ab47-b496cbb903b2"
    },
    cta: {
      link: "https://www.swiggy.com/city/chhindwara/satkar-restaurant-sinchai-colony-satkar-chowk-rest150591",
      type: "WEBLINK"
    }
  },
  {
    id: "385824",
    name: "The Belgian Waffle Co.",
    cloudinaryImageId: "5116a385bac0548e06c33c08350fbf11",
    locality: "Sinchai Colony",
    areaName: "Mohan Nagar",
    costForTwo: "₹200 for two",
    cuisines: [
      "Waffle",
      "Desserts",
      "Ice Cream",
      "Beverages"
    ],
    avgRating: 4.6,
    veg: true,
    parentId: "2233",
    avgRatingString: "4.6",
    totalRatingsString: "289",
    sla: {
      deliveryTime: 62,
      lastMileTravel: 11.2,
      serviceability: "SERVICEABLE",
      slaString: "60-65 mins",
      lastMileTravelString: "11.2 km",
      iconType: "ICON_TYPE_EMPTY"
    },
    availability: {
      nextCloseTime: "2024-12-12 16:00:39",
      opened: true
    },
    badges: {
      imageBadges: [
        {
          imageId: "v1695133679/badges/Pure_Veg111.png",
          description: "pureveg"
        }
      ]
    }
  }
];


const Restruantcard = ({ name, cloudinaryImageId, cuisines, avgRating }) => {
  return (
    <div className="cart">
      <img src={"https://media-assets.swiggy.com/swiggy/image/upload/"+
          cloudinaryImageId
        } />
      <h2>{name}</h2>
      <h3>{cuisines.join(" , ")}</h3>
      <h4>{avgRating}</h4>
    </div>
  );
}

const Body = () => {
  return (
    <div className="maibodydiv">
      {
        Resturantinfo.map((Restruant)=>{
          return <Restruantcard {... Restruant} key={Restruant.id}/>
        })
      }
    </div>
  );
};

const Footer = () => {
  return <h3></h3>
}

const Layout = () => {
  return (<>
    <Header />
    <Body />
    <Footer />
  </>);
};

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(<Layout />); 
